name: Record Stream

on:
  repository_dispatch:
    types: [record_stream]

jobs:
  record:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install gdrive
      run: |
        curl -L -o gdrive.tar.gz https://github.com/prasmussen/gdrive/releases/download/2.1.1/gdrive-linux-x64
        chmod +x gdrive-linux-x64
        sudo mv gdrive-linux-x64 /usr/local/bin/gdrive

    - name: Prepare for Recording
      run: mkdir -p recordings

    - name: Record Stream
      run: |
        station_name="${{ github.event.client_payload.station_name }}"
        stream_url="${{ github.event.client_payload.stream_url }}"
        duration="${{ github.event.client_payload.duration }}"
        timestamp=$(date +'%Y%m%d_%H%M%S')
        output_file="recordings/${station_name}_${timestamp}.mp3"

        echo "Recording stream: $stream_url for $duration seconds..."
        ffmpeg -y -i "$stream_url" -c:a libmp3lame -b:a 320k -t "$duration" "$output_file"

        echo "Sending status to Glitch..."
        curl -X POST https://your-glitch-project-url/status-update \
          -H "Content-Type: application/json" \
          -d "{\"status\":\"✅ Recording complete: $output_file\",\"task_id\":\"${timestamp}\"}"

    - name: Upload to Google Drive
      env:
        GDRIVE_TOKEN: ${{ secrets.GDRIVE_TOKEN }}  # You need to store this manually
      run: |
        output_file=$(ls recordings/*.mp3 | head -n 1)
        echo "Uploading $output_file..."
        gdrive upload "$output_file"

        echo "Sending upload status to Glitch..."
        curl -X POST https://your-glitch-project-url/status-update \
          -H "Content-Type: application/json" \
          -d "{\"status\":\"✅ Upload complete: $output_file\",\"task_id\":\"upload_${timestamp}\"}"
