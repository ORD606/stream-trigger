name: Record Stream

on:
  repository_dispatch:
    types: [record_stream]

jobs:
  record:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-api-python-client google-auth google-auth-oauthlib python-dotenv

      - name: Create recordings directory
        run: mkdir -p recordings

      - name: Create service_account.json from secret
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        run: echo "$GOOGLE_SERVICE_ACCOUNT_JSON" > service_account.json

      - name: Record stream and upload to Google Drive
        env:
          STATION_NAME: ${{ github.event.client_payload.station_name }}
          STREAM_URL: ${{ github.event.client_payload.stream_url }}
          DURATION: ${{ github.event.client_payload.duration }}
          GDRIVE_FOLDER_ID: "1MkS_2E2K_f4yiOXvBWjp-XG-ZoMHLd1J"
        run: |
          timestamp=$(date +'%Y%m%d_%H%M%S')
          output_file="recordings/${STATION_NAME}_${timestamp}.mp3"
          echo "$output_file" > output_file_path.txt
          echo "ðŸ“¤ Uploading $output_file to Google Drive..."
          
          python3 - <<EOF
import sys
sys.path.append('.github/workflows')
from google_drive_upload import retry_recording, authenticate_service_account, upload_file_to_drive

output_file = '${output_file}'
success = retry_recording(output_file, '${STREAM_URL}', int('${DURATION}'), '${STATION_NAME}')
if success:
    service = authenticate_service_account()
    upload_file_to_drive(service, output_file, '${GDRIVE_FOLDER_ID}')
else:
    raise Exception('Recording failed after all retry attempts.')
EOF

      - name: Debug - Show output file
        run: ls -lh recordings/
