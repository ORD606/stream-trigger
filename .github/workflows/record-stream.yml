name: Record Stream

on:
  repository_dispatch:
    types: [record_stream]

jobs:
  record:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python 3.10
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Step 3: Install FFmpeg
      - name: Install FFmpeg
        run: |
          sudo apt update
          sudo apt install -y ffmpeg
      - name: Check FFmpeg version
        run: ffmpeg -version

      # Step 4: Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-api-python-client google-auth google-auth-oauthlib python-dotenv

      # Step 5: Create directory for recordings
      - name: Create recordings directory
        run: mkdir -p recordings

      # Step 6: Create service_account.json from secret
      - name: Create service_account.json
        env:
          GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
        run: echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}" > service_account.json

      # Step 7: Wait until the scheduled start time
      - name: Wait until scheduled time
        env:
          START_TIME: ${{ github.event.client_payload.start_time }} # Example: 20250505_091900 (YYYYMMDD_HHMMSS)
        run: |
          echo "Scheduled start time: $START_TIME"
          while [ "$(date +'%Y%m%d_%H%M%S')" -lt "$START_TIME" ]; do
            echo "Current time: $(date +'%Y%m%d_%H%M%S'). Waiting..."
            sleep 5
          done
          echo "üé¨ It's time to start recording!"

      # Step 8: Set environment variables for the recording
      - name: Set environment variables
        run: |
          timestamp=$(date +'%Y%m%d_%H%M%S')
          output_file="recordings/${{ github.event.client_payload.station_name }}_${timestamp}.mp3"
          echo "OUTPUT_FILE=$output_file" >> $GITHUB_ENV

      # Step 9: Record stream and upload
      - name: Record stream and upload
        env:
          STATION_NAME: ${{ github.event.client_payload.station_name }}
          STREAM_URL: ${{ github.event.client_payload.stream_url }}
          DURATION: ${{ github.event.client_payload.duration }}
          GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
        run: |
          echo "üéôÔ∏è Starting recording: $STATION_NAME"
          python3 .github/workflows/record_and_upload.py

      # Step 10: Debugging - Verify recordings directory
      - name: Debug - Show output file
        run: ls -lh recordings/
